// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CancelAllOrders extends ethereum.Event {
  get params(): CancelAllOrders__Params {
    return new CancelAllOrders__Params(this);
  }
}

export class CancelAllOrders__Params {
  _event: CancelAllOrders;

  constructor(event: CancelAllOrders) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newMinNonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CancelMultipleOrders extends ethereum.Event {
  get params(): CancelMultipleOrders__Params {
    return new CancelMultipleOrders__Params(this);
  }
}

export class CancelMultipleOrders__Params {
  _event: CancelMultipleOrders;

  constructor(event: CancelMultipleOrders) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderNonces(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class Claim extends ethereum.Event {
  get params(): Claim__Params {
    return new Claim__Params(this);
  }
}

export class Claim__Params {
  _event: Claim;

  constructor(event: Claim) {
    this._event = event;
  }

  get orderHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get orderType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get borrower(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get lender(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get collection(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get collateral(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get currency(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get status(): i32 {
    return this._event.parameters[9].value.toI32();
  }
}

export class Close extends ethereum.Event {
  get params(): Close__Params {
    return new Close__Params(this);
  }
}

export class Close__Params {
  _event: Close;

  constructor(event: Close) {
    this._event = event;
  }

  get orderHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get orderType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get borrower(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get lender(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get collection(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get returnedTokenId(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get collateral(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get currency(): Address {
    return this._event.parameters[9].value.toAddress();
  }

  get status(): i32 {
    return this._event.parameters[10].value.toI32();
  }
}

export class OrderFulfilled extends ethereum.Event {
  get params(): OrderFulfilled__Params {
    return new OrderFulfilled__Params(this);
  }
}

export class OrderFulfilled__Params {
  _event: OrderFulfilled;

  constructor(event: OrderFulfilled) {
    this._event = event;
  }

  get orderHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get orderType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get orderNonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get taker(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get maker(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get collection(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get collateral(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get currency(): Address {
    return this._event.parameters[10].value.toAddress();
  }

  get duration(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }

  get expiryDateTime(): BigInt {
    return this._event.parameters[12].value.toBigInt();
  }

  get status(): i32 {
    return this._event.parameters[13].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProtocolFeeManagerUpdated extends ethereum.Event {
  get params(): ProtocolFeeManagerUpdated__Params {
    return new ProtocolFeeManagerUpdated__Params(this);
  }
}

export class ProtocolFeeManagerUpdated__Params {
  _event: ProtocolFeeManagerUpdated;

  constructor(event: ProtocolFeeManagerUpdated) {
    this._event = event;
  }

  get protocolFeeManagerAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProtocolFeeRecipientUpdated extends ethereum.Event {
  get params(): ProtocolFeeRecipientUpdated__Params {
    return new ProtocolFeeRecipientUpdated__Params(this);
  }
}

export class ProtocolFeeRecipientUpdated__Params {
  _event: ProtocolFeeRecipientUpdated;

  constructor(event: ProtocolFeeRecipientUpdated) {
    this._event = event;
  }

  get _protocolFeeRecipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ReserovirOracleAddressUpadted extends ethereum.Event {
  get params(): ReserovirOracleAddressUpadted__Params {
    return new ReserovirOracleAddressUpadted__Params(this);
  }
}

export class ReserovirOracleAddressUpadted__Params {
  _event: ReserovirOracleAddressUpadted;

  constructor(event: ReserovirOracleAddressUpadted) {
    this._event = event;
  }

  get _reservoirOracleAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ReservoirOracleUpdated extends ethereum.Event {
  get params(): ReservoirOracleUpdated__Params {
    return new ReservoirOracleUpdated__Params(this);
  }
}

export class ReservoirOracleUpdated__Params {
  _event: ReservoirOracleUpdated;

  constructor(event: ReservoirOracleUpdated) {
    this._event = event;
  }

  get reservoirOracle(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WhitelistedCurrenciesUpdated extends ethereum.Event {
  get params(): WhitelistedCurrenciesUpdated__Params {
    return new WhitelistedCurrenciesUpdated__Params(this);
  }
}

export class WhitelistedCurrenciesUpdated__Params {
  _event: WhitelistedCurrenciesUpdated;

  constructor(event: WhitelistedCurrenciesUpdated) {
    this._event = event;
  }

  get whitelistedCurrenciesAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Dyve__ordersResult {
  value0: Bytes;
  value1: i32;
  value2: Address;
  value3: Address;
  value4: Address;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: Address;
  value10: i32;

  constructor(
    value0: Bytes,
    value1: i32,
    value2: Address,
    value3: Address,
    value4: Address,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: Address,
    value10: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromAddress(this.value9));
    map.set(
      "value10",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value10))
    );
    return map;
  }

  getOrderHash(): Bytes {
    return this.value0;
  }

  getOrderType(): i32 {
    return this.value1;
  }

  getLender(): Address {
    return this.value2;
  }

  getBorrower(): Address {
    return this.value3;
  }

  getCollection(): Address {
    return this.value4;
  }

  getTokenId(): BigInt {
    return this.value5;
  }

  getAmount(): BigInt {
    return this.value6;
  }

  getExpiryDateTime(): BigInt {
    return this.value7;
  }

  getCollateral(): BigInt {
    return this.value8;
  }

  getCurrency(): Address {
    return this.value9;
  }

  getStatus(): i32 {
    return this.value10;
  }
}

export class Dyve extends ethereum.SmartContract {
  static bind(address: Address): Dyve {
    return new Dyve("Dyve", address);
  }

  INTERFACE_ID_ERC1155(): Bytes {
    let result = super.call(
      "INTERFACE_ID_ERC1155",
      "INTERFACE_ID_ERC1155():(bytes4)",
      []
    );

    return result[0].toBytes();
  }

  try_INTERFACE_ID_ERC1155(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "INTERFACE_ID_ERC1155",
      "INTERFACE_ID_ERC1155():(bytes4)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  INTERFACE_ID_ERC721(): Bytes {
    let result = super.call(
      "INTERFACE_ID_ERC721",
      "INTERFACE_ID_ERC721():(bytes4)",
      []
    );

    return result[0].toBytes();
  }

  try_INTERFACE_ID_ERC721(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "INTERFACE_ID_ERC721",
      "INTERFACE_ID_ERC721():(bytes4)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  bps(): BigInt {
    let result = super.call("bps", "bps():(uint256)", []);

    return result[0].toBigInt();
  }

  try_bps(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("bps", "bps():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nonceLimit(): BigInt {
    let result = super.call("nonceLimit", "nonceLimit():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nonceLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonceLimit", "nonceLimit():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  orders(param0: Bytes): Dyve__ordersResult {
    let result = super.call(
      "orders",
      "orders(bytes32):(bytes32,uint8,address,address,address,uint256,uint256,uint256,uint256,address,uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new Dyve__ordersResult(
      result[0].toBytes(),
      result[1].toI32(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toAddress(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toAddress(),
      result[10].toI32()
    );
  }

  try_orders(param0: Bytes): ethereum.CallResult<Dyve__ordersResult> {
    let result = super.tryCall(
      "orders",
      "orders(bytes32):(bytes32,uint8,address,address,address,uint256,uint256,uint256,uint256,address,uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Dyve__ordersResult(
        value[0].toBytes(),
        value[1].toI32(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toAddress(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toAddress(),
        value[10].toI32()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolFeeManager(): Address {
    let result = super.call(
      "protocolFeeManager",
      "protocolFeeManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_protocolFeeManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "protocolFeeManager",
      "protocolFeeManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolFeeRecipient(): Address {
    let result = super.call(
      "protocolFeeRecipient",
      "protocolFeeRecipient():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_protocolFeeRecipient(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "protocolFeeRecipient",
      "protocolFeeRecipient():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reservoirOracle(): Address {
    let result = super.call(
      "reservoirOracle",
      "reservoirOracle():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_reservoirOracle(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "reservoirOracle",
      "reservoirOracle():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reservoirOracleAddress(): Address {
    let result = super.call(
      "reservoirOracleAddress",
      "reservoirOracleAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_reservoirOracleAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "reservoirOracleAddress",
      "reservoirOracleAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  userMinOrderNonce(param0: Address): BigInt {
    let result = super.call(
      "userMinOrderNonce",
      "userMinOrderNonce(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_userMinOrderNonce(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userMinOrderNonce",
      "userMinOrderNonce(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  whitelistedCurrencies(): Address {
    let result = super.call(
      "whitelistedCurrencies",
      "whitelistedCurrencies():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_whitelistedCurrencies(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "whitelistedCurrencies",
      "whitelistedCurrencies():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get whitelistedCurrenciesAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get protocolFeeManagerAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _reservoirOracleAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _protocolFeeRecipient(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelAllOrdersForSenderCall extends ethereum.Call {
  get inputs(): CancelAllOrdersForSenderCall__Inputs {
    return new CancelAllOrdersForSenderCall__Inputs(this);
  }

  get outputs(): CancelAllOrdersForSenderCall__Outputs {
    return new CancelAllOrdersForSenderCall__Outputs(this);
  }
}

export class CancelAllOrdersForSenderCall__Inputs {
  _call: CancelAllOrdersForSenderCall;

  constructor(call: CancelAllOrdersForSenderCall) {
    this._call = call;
  }

  get minNonce(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelAllOrdersForSenderCall__Outputs {
  _call: CancelAllOrdersForSenderCall;

  constructor(call: CancelAllOrdersForSenderCall) {
    this._call = call;
  }
}

export class CancelMultipleMakerOrdersCall extends ethereum.Call {
  get inputs(): CancelMultipleMakerOrdersCall__Inputs {
    return new CancelMultipleMakerOrdersCall__Inputs(this);
  }

  get outputs(): CancelMultipleMakerOrdersCall__Outputs {
    return new CancelMultipleMakerOrdersCall__Outputs(this);
  }
}

export class CancelMultipleMakerOrdersCall__Inputs {
  _call: CancelMultipleMakerOrdersCall;

  constructor(call: CancelMultipleMakerOrdersCall) {
    this._call = call;
  }

  get orderNonces(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class CancelMultipleMakerOrdersCall__Outputs {
  _call: CancelMultipleMakerOrdersCall;

  constructor(call: CancelMultipleMakerOrdersCall) {
    this._call = call;
  }
}

export class ClaimCollateralCall extends ethereum.Call {
  get inputs(): ClaimCollateralCall__Inputs {
    return new ClaimCollateralCall__Inputs(this);
  }

  get outputs(): ClaimCollateralCall__Outputs {
    return new ClaimCollateralCall__Outputs(this);
  }
}

export class ClaimCollateralCall__Inputs {
  _call: ClaimCollateralCall;

  constructor(call: ClaimCollateralCall) {
    this._call = call;
  }

  get orderHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ClaimCollateralCall__Outputs {
  _call: ClaimCollateralCall;

  constructor(call: ClaimCollateralCall) {
    this._call = call;
  }
}

export class ClosePositionCall extends ethereum.Call {
  get inputs(): ClosePositionCall__Inputs {
    return new ClosePositionCall__Inputs(this);
  }

  get outputs(): ClosePositionCall__Outputs {
    return new ClosePositionCall__Outputs(this);
  }
}

export class ClosePositionCall__Inputs {
  _call: ClosePositionCall;

  constructor(call: ClosePositionCall) {
    this._call = call;
  }

  get orderHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get returnTokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get message(): ClosePositionCallMessageStruct {
    return changetype<ClosePositionCallMessageStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class ClosePositionCall__Outputs {
  _call: ClosePositionCall;

  constructor(call: ClosePositionCall) {
    this._call = call;
  }
}

export class ClosePositionCallMessageStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get payload(): Bytes {
    return this[1].toBytes();
  }

  get timestamp(): BigInt {
    return this[2].toBigInt();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }
}

export class FulfillOrderCall extends ethereum.Call {
  get inputs(): FulfillOrderCall__Inputs {
    return new FulfillOrderCall__Inputs(this);
  }

  get outputs(): FulfillOrderCall__Outputs {
    return new FulfillOrderCall__Outputs(this);
  }
}

export class FulfillOrderCall__Inputs {
  _call: FulfillOrderCall;

  constructor(call: FulfillOrderCall) {
    this._call = call;
  }

  get order(): FulfillOrderCallOrderStruct {
    return changetype<FulfillOrderCallOrderStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get message(): FulfillOrderCallMessageStruct {
    return changetype<FulfillOrderCallMessageStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class FulfillOrderCall__Outputs {
  _call: FulfillOrderCall;

  constructor(call: FulfillOrderCall) {
    this._call = call;
  }
}

export class FulfillOrderCallOrderStruct extends ethereum.Tuple {
  get orderType(): i32 {
    return this[0].toI32();
  }

  get signer(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get amount(): BigInt {
    return this[4].toBigInt();
  }

  get duration(): BigInt {
    return this[5].toBigInt();
  }

  get collateral(): BigInt {
    return this[6].toBigInt();
  }

  get fee(): BigInt {
    return this[7].toBigInt();
  }

  get currency(): Address {
    return this[8].toAddress();
  }

  get premiumCollection(): Address {
    return this[9].toAddress();
  }

  get premiumTokenId(): BigInt {
    return this[10].toBigInt();
  }

  get nonce(): BigInt {
    return this[11].toBigInt();
  }

  get endTime(): BigInt {
    return this[12].toBigInt();
  }

  get signature(): Bytes {
    return this[13].toBytes();
  }
}

export class FulfillOrderCallMessageStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get payload(): Bytes {
    return this[1].toBytes();
  }

  get timestamp(): BigInt {
    return this[2].toBigInt();
  }

  get signature(): Bytes {
    return this[3].toBytes();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateProtocolFeeManagerCall extends ethereum.Call {
  get inputs(): UpdateProtocolFeeManagerCall__Inputs {
    return new UpdateProtocolFeeManagerCall__Inputs(this);
  }

  get outputs(): UpdateProtocolFeeManagerCall__Outputs {
    return new UpdateProtocolFeeManagerCall__Outputs(this);
  }
}

export class UpdateProtocolFeeManagerCall__Inputs {
  _call: UpdateProtocolFeeManagerCall;

  constructor(call: UpdateProtocolFeeManagerCall) {
    this._call = call;
  }

  get _protocolFeeManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateProtocolFeeManagerCall__Outputs {
  _call: UpdateProtocolFeeManagerCall;

  constructor(call: UpdateProtocolFeeManagerCall) {
    this._call = call;
  }
}

export class UpdateProtocolFeeRecipientCall extends ethereum.Call {
  get inputs(): UpdateProtocolFeeRecipientCall__Inputs {
    return new UpdateProtocolFeeRecipientCall__Inputs(this);
  }

  get outputs(): UpdateProtocolFeeRecipientCall__Outputs {
    return new UpdateProtocolFeeRecipientCall__Outputs(this);
  }
}

export class UpdateProtocolFeeRecipientCall__Inputs {
  _call: UpdateProtocolFeeRecipientCall;

  constructor(call: UpdateProtocolFeeRecipientCall) {
    this._call = call;
  }

  get _protocolFeeRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateProtocolFeeRecipientCall__Outputs {
  _call: UpdateProtocolFeeRecipientCall;

  constructor(call: UpdateProtocolFeeRecipientCall) {
    this._call = call;
  }
}

export class UpdateReservoirOracleCall extends ethereum.Call {
  get inputs(): UpdateReservoirOracleCall__Inputs {
    return new UpdateReservoirOracleCall__Inputs(this);
  }

  get outputs(): UpdateReservoirOracleCall__Outputs {
    return new UpdateReservoirOracleCall__Outputs(this);
  }
}

export class UpdateReservoirOracleCall__Inputs {
  _call: UpdateReservoirOracleCall;

  constructor(call: UpdateReservoirOracleCall) {
    this._call = call;
  }

  get _reservoirOracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateReservoirOracleCall__Outputs {
  _call: UpdateReservoirOracleCall;

  constructor(call: UpdateReservoirOracleCall) {
    this._call = call;
  }
}

export class UpdateWhitelistedCurrenciesCall extends ethereum.Call {
  get inputs(): UpdateWhitelistedCurrenciesCall__Inputs {
    return new UpdateWhitelistedCurrenciesCall__Inputs(this);
  }

  get outputs(): UpdateWhitelistedCurrenciesCall__Outputs {
    return new UpdateWhitelistedCurrenciesCall__Outputs(this);
  }
}

export class UpdateWhitelistedCurrenciesCall__Inputs {
  _call: UpdateWhitelistedCurrenciesCall;

  constructor(call: UpdateWhitelistedCurrenciesCall) {
    this._call = call;
  }

  get _whitelistedCurrencies(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateWhitelistedCurrenciesCall__Outputs {
  _call: UpdateWhitelistedCurrenciesCall;

  constructor(call: UpdateWhitelistedCurrenciesCall) {
    this._call = call;
  }
}
